/*
 * Black API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blackapi

import (
	"encoding/json"
)

// BetLogResponse struct for BetLogResponse
type BetLogResponse struct {
	Status string `json:"status"`
	Data []LogItem `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _BetLogResponse BetLogResponse

// NewBetLogResponse instantiates a new BetLogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBetLogResponse(status string, data []LogItem, ) *BetLogResponse {
	this := BetLogResponse{}
	this.Status = status
	this.Data = data
	return &this
}

// NewBetLogResponseWithDefaults instantiates a new BetLogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBetLogResponseWithDefaults() *BetLogResponse {
	this := BetLogResponse{}
	return &this
}

// GetStatus returns the Status field value
func (o *BetLogResponse) GetStatus() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BetLogResponse) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BetLogResponse) SetStatus(v string) {
	o.Status = v
}

// GetData returns the Data field value
func (o *BetLogResponse) GetData() []LogItem {
	if o == nil  {
		var ret []LogItem
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *BetLogResponse) GetDataOk() (*[]LogItem, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *BetLogResponse) SetData(v []LogItem) {
	o.Data = v
}

func (o BetLogResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BetLogResponse) UnmarshalJSON(bytes []byte) (err error) {
	varBetLogResponse := _BetLogResponse{}

	if err = json.Unmarshal(bytes, &varBetLogResponse); err == nil {
		*o = BetLogResponse(varBetLogResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBetLogResponse struct {
	value *BetLogResponse
	isSet bool
}

func (v NullableBetLogResponse) Get() *BetLogResponse {
	return v.value
}

func (v *NullableBetLogResponse) Set(val *BetLogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBetLogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBetLogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBetLogResponse(val *BetLogResponse) *NullableBetLogResponse {
	return &NullableBetLogResponse{value: val, isSet: true}
}

func (v NullableBetLogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBetLogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


