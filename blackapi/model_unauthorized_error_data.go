/*
 * Black API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blackapi

import (
	"encoding/json"
)

// UnauthorizedErrorData struct for UnauthorizedErrorData
type UnauthorizedErrorData struct {
	Detail *string `json:"detail,omitempty"`
}

// NewUnauthorizedErrorData instantiates a new UnauthorizedErrorData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnauthorizedErrorData() *UnauthorizedErrorData {
	this := UnauthorizedErrorData{}
	return &this
}

// NewUnauthorizedErrorDataWithDefaults instantiates a new UnauthorizedErrorData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnauthorizedErrorDataWithDefaults() *UnauthorizedErrorData {
	this := UnauthorizedErrorData{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *UnauthorizedErrorData) GetDetail() string {
	if o == nil || o.Detail == nil {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnauthorizedErrorData) GetDetailOk() (*string, bool) {
	if o == nil || o.Detail == nil {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *UnauthorizedErrorData) HasDetail() bool {
	if o != nil && o.Detail != nil {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *UnauthorizedErrorData) SetDetail(v string) {
	o.Detail = &v
}

func (o UnauthorizedErrorData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Detail != nil {
		toSerialize["detail"] = o.Detail
	}
	return json.Marshal(toSerialize)
}

type NullableUnauthorizedErrorData struct {
	value *UnauthorizedErrorData
	isSet bool
}

func (v NullableUnauthorizedErrorData) Get() *UnauthorizedErrorData {
	return v.value
}

func (v *NullableUnauthorizedErrorData) Set(val *UnauthorizedErrorData) {
	v.value = val
	v.isSet = true
}

func (v NullableUnauthorizedErrorData) IsSet() bool {
	return v.isSet
}

func (v *NullableUnauthorizedErrorData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnauthorizedErrorData(val *UnauthorizedErrorData) *NullableUnauthorizedErrorData {
	return &NullableUnauthorizedErrorData{value: val, isSet: true}
}

func (v NullableUnauthorizedErrorData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnauthorizedErrorData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


