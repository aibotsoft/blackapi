/*
 * Black API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blackapi

import (
	"encoding/json"
)

// BookieData struct for BookieData
type BookieData struct {
	Bookie string `json:"bookie"`
	CcyCode string `json:"ccy_code"`
	Enabled bool `json:"enabled"`
	Id int64 `json:"id"`
	PriceScheme string `json:"price_scheme"`
	Username string `json:"username"`
	AdditionalProperties map[string]interface{}
}

type _BookieData BookieData

// NewBookieData instantiates a new BookieData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookieData(bookie string, ccyCode string, enabled bool, id int64, priceScheme string, username string, ) *BookieData {
	this := BookieData{}
	this.Bookie = bookie
	this.CcyCode = ccyCode
	this.Enabled = enabled
	this.Id = id
	this.PriceScheme = priceScheme
	this.Username = username
	return &this
}

// NewBookieDataWithDefaults instantiates a new BookieData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookieDataWithDefaults() *BookieData {
	this := BookieData{}
	return &this
}

// GetBookie returns the Bookie field value
func (o *BookieData) GetBookie() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Bookie
}

// GetBookieOk returns a tuple with the Bookie field value
// and a boolean to check if the value has been set.
func (o *BookieData) GetBookieOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Bookie, true
}

// SetBookie sets field value
func (o *BookieData) SetBookie(v string) {
	o.Bookie = v
}

// GetCcyCode returns the CcyCode field value
func (o *BookieData) GetCcyCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CcyCode
}

// GetCcyCodeOk returns a tuple with the CcyCode field value
// and a boolean to check if the value has been set.
func (o *BookieData) GetCcyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CcyCode, true
}

// SetCcyCode sets field value
func (o *BookieData) SetCcyCode(v string) {
	o.CcyCode = v
}

// GetEnabled returns the Enabled field value
func (o *BookieData) GetEnabled() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *BookieData) GetEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *BookieData) SetEnabled(v bool) {
	o.Enabled = v
}

// GetId returns the Id field value
func (o *BookieData) GetId() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BookieData) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BookieData) SetId(v int64) {
	o.Id = v
}

// GetPriceScheme returns the PriceScheme field value
func (o *BookieData) GetPriceScheme() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PriceScheme
}

// GetPriceSchemeOk returns a tuple with the PriceScheme field value
// and a boolean to check if the value has been set.
func (o *BookieData) GetPriceSchemeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PriceScheme, true
}

// SetPriceScheme sets field value
func (o *BookieData) SetPriceScheme(v string) {
	o.PriceScheme = v
}

// GetUsername returns the Username field value
func (o *BookieData) GetUsername() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *BookieData) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *BookieData) SetUsername(v string) {
	o.Username = v
}

func (o BookieData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bookie"] = o.Bookie
	}
	if true {
		toSerialize["ccy_code"] = o.CcyCode
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["price_scheme"] = o.PriceScheme
	}
	if true {
		toSerialize["username"] = o.Username
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BookieData) UnmarshalJSON(bytes []byte) (err error) {
	varBookieData := _BookieData{}

	if err = json.Unmarshal(bytes, &varBookieData); err == nil {
		*o = BookieData(varBookieData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "bookie")
		delete(additionalProperties, "ccy_code")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "id")
		delete(additionalProperties, "price_scheme")
		delete(additionalProperties, "username")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBookieData struct {
	value *BookieData
	isSet bool
}

func (v NullableBookieData) Get() *BookieData {
	return v.value
}

func (v *NullableBookieData) Set(val *BookieData) {
	v.value = val
	v.isSet = true
}

func (v NullableBookieData) IsSet() bool {
	return v.isSet
}

func (v *NullableBookieData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookieData(val *BookieData) *NullableBookieData {
	return &NullableBookieData{value: val, isSet: true}
}

func (v NullableBookieData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookieData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


